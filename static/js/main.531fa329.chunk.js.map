{"version":3,"sources":["ButtonWithIframe.jsx","SocialMediaToolbar.jsx","ButtonsAndVideoFrameThatChanges.jsx","App.js","serviceWorker.js","index.js"],"names":["ButtonWithIframe","Button","variant","this","props","size","onClick","onClickFunc","text","Component","SocialMediaToolbar","className","url","network","MenuOptions","BANDCAMP","title","desktopUrl","mobileUrl","WORDPRESS","YOUTUBESOLOGUITAR","VIMEOSOUNDTRACK","YOUTUBESOUNDDESIGN","YOUTUBELIVESHOW","ButtonsAndVideoFrameThatChanges","openAboutMeModel","setState","showAboutMeModal","closeAboutMeModal","openContactModal","showContactModal","closeContactModal","changeiFrameDiaplay","newUrl","urlToDisplayInFrame","shouldBeHidden","hideEmbeddedPage","openMobileMenu","mobileMenuOpen","closeMobileMenu","menuOpenClick","event","anchorEl","currentTarget","handleMobileMenuOptions","option","mobileMenuText","resetMobileOptions","state","windowHeight","window","innerHeight","windowWidth","innerWidth","desktopButtons","desktopButtonNum","e","push","key","Object","keys","mobileMenuOptions","MenuItem","style","backgroundColor","zIndex","padding","height","width","isOpen","onRequestClose","contentLabel","ariaHideApp","isMobile","ModalHeader","closeButton","onHide","href","display","position","id","marginTop","marginBottom","Menu","open","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.531fa329.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass ButtonWithIframe extends Component{\r\n    render(){\r\n        return(\r\n            <Button variant={this.props.variant} size=\"lg\"  onClick = {this.props.onClickFunc}>{this.props.text}</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ButtonWithIframe;","import React, { Component } from 'react';\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\n\r\nclass SocialMediaToolbar extends Component{\r\n\r\n    render(){\r\n        return(<div>\r\n                <ul className='makestack'>\r\n                    <div></div>\r\n                    <SocialIcon url=\"https://www.facebook.com/ZakBulletMusic/\" network=\"facebook\"/>\r\n                    <SocialIcon url=\"https://www.youtube.com/channel/UCne9pab0S3txRE_e3PM-hdg\" network=\"youtube\"/>\r\n                    <SocialIcon url=\"https://www.instagram.com/zachsteuerpa/\" network=\"instagram\"/>\r\n                    <SocialIcon url=\"mailto:zakbulletofficial@gmail.com\" network=\"email\"/>\r\n                    <div></div>\r\n                </ul>\r\n              </div>);\r\n    }\r\n}\r\nexport default SocialMediaToolbar;","import React, { Component } from 'react';\r\nimport ButtonWithIframe from \"./ButtonWithIframe\";\r\nimport Iframe from 'react-iframe';\r\nimport SocialMediaToolbar from \"./SocialMediaToolbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-modal\";\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport {\r\n    BrowserView,\r\n    MobileView,\r\n    isBrowser,\r\n    isMobile\r\n} from 'react-device-detect';\r\nimport { Menu, MenuItem} from '@material-ui/core';\r\nimport {SocialIcon} from \"react-social-icons\";\r\n\r\nconst MenuOptions = { // I realized I'd have to make a row of buttons for desktop and a dropdown for mobile\r\n    BANDCAMP: {\r\n        title: \"bandcamp\",\r\n        desktopUrl: \"http://zakbullet.bandcamp.com\",\r\n        mobileUrl: \"http://zakbullet.bandcamp.com\"},\r\n    WORDPRESS: {\r\n        title: \"blog\",\r\n        desktopUrl: \"http://zakbullet.wordpress.com\",\r\n        mobileUrl: \"http://zakbullet.wordpress.com\"\r\n    },\r\n    YOUTUBESOLOGUITAR:{\r\n        title: \"solo guitar\",\r\n        desktopUrl: \"http://www.youtube.com/embed/47QNJBAYXDw\",\r\n        mobileUrl: \"http://www.youtube.com/embed/47QNJBAYXDw\",\r\n    },\r\n    VIMEOSOUNDTRACK:{\r\n        title: \"Soundtrack\",\r\n        desktopUrl: \"https://vlare.tv/embed/F47YyFjm/false/true/0\",\r\n        mobileUrl: \"https://vlare.tv/v/F47YyFjm\"\r\n    },\r\n    YOUTUBESOUNDDESIGN: {\r\n        title: \"Sound Design Pedagogy\",\r\n        desktopUrl: \"http://www.youtube.com/embed/P6pmyqCv8sQ\",\r\n        mobileUrl: \"http://www.youtube.com/embed/P6pmyqCv8sQ\",\r\n    },\r\n    YOUTUBELIVESHOW: {\r\n        title: \"DJing with live guitar loops\",\r\n        desktopUrl: \"http://www.youtube.com/embed/r4QoZywqcL4\",\r\n        mobileUrl: \"http://www.youtube.com/embed/r4QoZywqcL4\"\r\n    }\r\n}\r\n\r\nconst defaultMobileMenuText = \"Choose one\";\r\n\r\nclass ButtonsAndVideoFrameThatChanges extends Component{\r\n\r\nconstructor(props){\r\n        super(props);\r\n        this.state = {\r\n            shouldBeHidden: true, // this controls the iframe for both the mobile and desktop frames\r\n            urlToDisplayInFrame: null,\r\n            showAboutMeModal: false,\r\n            showContactModal: false,\r\n            mobileMenuOpen: false,\r\n            mobileMenuText: defaultMobileMenuText,\r\n            anchorEl: null};\r\n    }\r\n\r\n    openAboutMeModel = () =>{\r\n        this.setState({showAboutMeModal: true});\r\n    }\r\n\r\n    closeAboutMeModal = () =>{\r\n        this.setState({showAboutMeModal: false});\r\n    }\r\n\r\n    openContactModal = () => {\r\n        this.setState({showContactModal : true});\r\n    }\r\n\r\n    closeContactModal = () => {\r\n        this.setState({showContactModal: false});\r\n    }\r\n\r\n    changeiFrameDiaplay  = (newUrl) => {\r\n        this.setState({urlToDisplayInFrame: newUrl, shouldBeHidden: false});\r\n    }\r\n\r\n    hideEmbeddedPage = () =>{\r\n        this.setState({shouldBeHidden: true});\r\n    }\r\n\r\n    openMobileMenu = () =>{\r\n        this.setState({mobileMenuOpen: true});\r\n    }\r\n\r\n    closeMobileMenu = () =>{\r\n        this.setState({mobileMenuOpen: false});\r\n    }\r\n\r\n    menuOpenClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n        this.openMobileMenu();\r\n    };\r\n\r\n    handleMobileMenuOptions = (option) =>{\r\n        this.setState(\r\n            {\r\n                mobileMenuOpen : false,\r\n                shouldBeHidden : false,\r\n            mobileMenuText : option.title,\r\n            urlToDisplayInFrame: option.mobileUrl,\r\n           });\r\n    }\r\n\r\n    resetMobileOptions = () =>{\r\n        this.setState({\r\n            shouldBeHidden: true,\r\n            mobileMenuText: defaultMobileMenuText,\r\n            mobileMenuOpen: false});\r\n    }\r\n\r\n    render(){\r\n        let windowHeight = window.innerHeight;\r\n        let windowWidth = window.innerWidth;\r\n        const desktopButtons = [];\r\n        let desktopButtonNum = 0;\r\n        for (const e of Object.keys(MenuOptions)){\r\n            desktopButtons.push(<div className=\"inline\" key={MenuOptions[e].title}>\r\n                <ButtonWithIframe text={MenuOptions[e].title} variant={desktopButtonNum % 2 == 0 ? \"warning\" : \"dark\"} onClickFunc={() => this.changeiFrameDiaplay(MenuOptions[e].desktopUrl) }/>\r\n        </div>)\r\n            desktopButtonNum++;\r\n        }\r\n        const mobileMenuOptions = [];\r\n        for (const e of Object.keys(MenuOptions)){\r\n            mobileMenuOptions.push(<MenuItem onClick={() => this.handleMobileMenuOptions(MenuOptions[e])} key={MenuOptions[e].title}>\r\n                {MenuOptions[e].title}\r\n            </MenuItem>)\r\n        }\r\n        return(\r\n            <div>\r\n                <BrowserView>\r\n                 <SocialMediaToolbar className='floatontop'/>\r\n                </BrowserView>\r\n                <MobileView>\r\n                    <div className=\"header\" style={{ backgroundColor: '#90ee90', zIndex: 9999 }}>\r\n                                <div className=\"makerows\" style={{ padding: '6px' }}>\r\n                                    {/* \"header\" has fixed 48px */}\r\n                                    <div/>\r\n                                    <SocialIcon url=\"https://www.facebook.com/ZakBulletMusic/\" network=\"facebook\" style={{ height: 36, width: 36 }}/>\r\n                                    <SocialIcon url=\"https://www.youtube.com/channel/UCne9pab0S3txRE_e3PM-hdg\" network=\"youtube\" style={{ height: 36, width: 36 }}/>\r\n                                    <SocialIcon url=\"https://www.instagram.com/zachsteuerpa/\" network=\"instagram\" style={{ height: 36, width: 36 }}/>\r\n                                    <SocialIcon url=\"mailto:zakbulletofficial@gmail.com\" network=\"email\" style={{ height: 36, width: 36 }}/>\r\n                                    <div/>\r\n                                </div>\r\n                    </div>\r\n                </MobileView>\r\n                <Modal\r\n                    isOpen={this.state.showAboutMeModal}\r\n                    onRequestClose={() => this.closeAboutMeModal()}\r\n                    contentLabel=\"About Me Modal\"\r\n                    ariaHideApp={false}\r\n                    className={isMobile? \"modal-mobile-style\" : \"modal-style\"}\r\n                >\r\n                    <ModalHeader closeButton onHide={() => this.closeAboutMeModal()}\r\n                                 style={isMobile ? {height: \"48px\"} : null}/>\r\n                    {/* if it is, we hide it under the top toolbar */}\r\n                    <div className=\"modal-text\">\r\n                        <h3>About Me</h3>\r\n                        I'm a guitarist and electronic musician who has played in rock and jazz bands my entire life. My 2017 album,\r\n                        <a href=\"https://zakbullet.bandcamp.com/album/introducing-zak-bullet-2018-remasters\">\r\n                            \"Introducing Zak Bullet,\" </a>\r\n                             was programmed, written, recorded, and mixed by me.\r\n                        I also wrote some of the music for EbenFrosty's cartoon adaptation of his comic series\r\n                        <a href=\"https://vlare.tv/v/F47YyFjm\"> \"Mashstache.\" </a>\r\n                        In addition to jazz and classical solo guitar performances (usually billed as Zach Steuer),\r\n                        I also have a <a href=\"https://www.youtube.com/watch?v=r4QoZywqcL4\">show </a>\r\n                         that combines DJing with live guitar loops in Ableton (usually billed as Zak Bullet).\r\n                        I am a triple-major in math, computer science, and music in college and will start work as a software developer\r\n                        this Summer after graduation.\r\n                    </div>\r\n                    <div  className=\"close-button-mobile-wrapper\">\r\n                     <MobileView>\r\n                        <div className=\"inline\"> </div>\r\n                        <Button className=\"inline\" onClick={() => this.closeAboutMeModal()} variant=\"danger\">Close</Button>\r\n                        <div className=\"inline\"></div>\r\n                     </MobileView>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    isOpen={this.state.showContactModal}\r\n                    onRequestClose={() => this.closeContactModal()}\r\n                    contentLabel=\"Contact Modal\"\r\n                    ariaHideApp={false}\r\n                    className={isMobile? \"modal-mobile-style\" : \"modal-style\"}\r\n                >\r\n                        <ModalHeader closeButton onHide={() => this.closeContactModal()}\r\n                                     style={isMobile ? {height: \"48px\"} : null}/>\r\n                        {/* if it is, we hide it under the top toolbar */}\r\n                     <div className=\"modal-text\">\r\n                        <h3>Contact</h3>\r\n                        Email: <a href=\"mailto:zakbulletofficial@gmail.com\"> ZakBulletOfficial@Gmail.com </a> <br/>\r\n                        Facebook: <a href=\"https://www.facebook.com/ZakBulletMusic/\"> www.facebook.com/ZakBulletMusic </a> <br/>\r\n                        Bandcamp: <a href=\"http://zakbullet.bandcamp.com\"> zakbullet.bandcamp.com </a><br/>\r\n                        Snapchat: zachsteuer <br/>\r\n                        Instagram: <a href=\"https://www.instagram.com/zachsteuerpa/\"> zachsteuerPA </a> <br/>\r\n                        tiktok: <a href =\"https://www.tiktok.com/@thezakbullet\"> thezakbullet</a></div>\r\n                     <div  className=\"close-button-mobile-wrapper\">\r\n                        <MobileView>\r\n                            <div className=\"inline\"> </div>\r\n                            <Button className=\"inline\" onClick={() => this.closeContactModal()} variant=\"danger\">Close</Button>\r\n                            <div className=\"inline\"></div>\r\n                        </MobileView>\r\n                    </div>\r\n                </Modal>\r\n                <div className=\"firstInTwoCentered\">\r\n                    <BrowserView>\r\n                        {desktopButtons}\r\n                    </BrowserView>\r\n                </div>\r\n                <div className={isMobile? \"mobileBridgeBetweenSections\" : \"bridgeBetweenSections\"}>\r\n                        <h3>Welcome to my music site. Click the buttons {isMobile ? \"below\" : \"above\"} to get started! If you were looking for a software engineering portfolio (including the source code for this site) check out: <a href=\"https://github.com/Zsteuer\">https://github.com/Zsteuer</a></h3>\r\n                </div>\r\n                <div className=\"secondInTwo\">\r\n                    <BrowserView>\r\n                    <div>\r\n                        <div>\r\n                            {this.state.shouldBeHidden? null: <ButtonWithIframe text=\"Close embedded page\" variant=\"danger\" onClickFunc={() => this.hideEmbeddedPage() }/> }\r\n                        </div>\r\n                        {this.state.shouldBeHidden? null : <Iframe url={this.state.urlToDisplayInFrame}\r\n                        width=\"1080px\" height=\"720px\" display=\"initial\" position=\"relative\"/> }\r\n                    </div>\r\n                    </BrowserView>\r\n                </div>\r\n                <div className = {isMobile? \"secondInTwoMobile\" : \"secondInTwo\"} >\r\n                    <div className = 'makerows' position=\"relative\">\r\n                        <div></div>\r\n                        <Button variant=\"success\" size=\"lg\" onClick={() => this.openAboutMeModel()}>About Me</Button>\r\n                        <div></div>\r\n                        <Button variant=\"success\" size=\"lg\" onClick={() => this.openContactModal()}>Contact</Button>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n                <MobileView>\r\n                    <Button id=\"openMobileMenuButton\" className=\"secondInTwo\" variant=\"dark\" size=\"lg\" style={{ marginTop : \"25px\", marginBottom: \"0px\"}} onClick={this.menuOpenClick}>{this.state.mobileMenuText}\r\n                    </Button>\r\n                    <div className=\"secondInTwo\" style={{ marginTop : \"0px\"}}>\r\n                        <div>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            open={this.state.mobileMenuOpen}\r\n                            onClose={() => this.closeMobileMenu()}\r\n                            anchorEl={this.state.anchorEl}\r\n                            getContentAnchorEl={null}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'center',\r\n                            }}\r\n                        >\r\n                            {mobileMenuOptions}\r\n                            <MenuItem onClick={() => this.resetMobileOptions()}>Close</MenuItem>\r\n                        </Menu>\r\n                        {this.state.shouldBeHidden? null : <Iframe style={{marginTop: \"0px\"}} url={this.state.urlToDisplayInFrame}\r\n                                                                   width={windowWidth*.9 + \"px\"} height={windowHeight*.9 + \"px\"} display=\"initial\" position=\"relative\"/>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"secondInTwo\" style={{height:\"100%\", width: \"100%\", marginTop: \"0px\"}}>\r\n                    </div>\r\n                </MobileView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ButtonsAndVideoFrameThatChanges;","import React from 'react';\r\nimport './App.css';\r\nimport ButtonsAndVideoFrameThatChanges from \"./ButtonsAndVideoFrameThatChanges\"\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nfunction App() {\r\n  return (\r\n      <div className={isMobile ? \"App-mobile\" : \"App\"}>\r\n          <ButtonsAndVideoFrameThatChanges className=\"App-overflow\"/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}